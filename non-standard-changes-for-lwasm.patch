From 3d21bbd32bee1dc441f7a847addf9b41a884e10c Mon Sep 17 00:00:00 2001
From: Tim Stahlhut <stahta01@gmail.com>
Date: Mon, 8 May 2023 09:41:53 -0400
Subject: code: Non-standard changes for lwasm

Re-write conditional logic for lwasm
---
 bas.asm    | 48 ++++++++++++++++++------------------
 disk.asm   | 72 +++++++++++++++++++++++++++---------------------------
 extbas.asm | 24 +++++++++---------
 supbas.asm | 26 ++++++++++----------
 4 files changed, 85 insertions(+), 85 deletions(-)

diff --git a/bas.asm b/bas.asm
index 64f5fa7..3da0bad 100644
--- a/bas.asm
+++ b/bas.asm
@@ -41,7 +41,7 @@ LA00E           LDS         #LINBUF+LBUFMX+1 ; SET STACK TO TOP OF LINE INPUT BU
                 BNE         BACDST          ; NO - DO A COLD START
                 JMP         ,X              ; YES, G0 THERE
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                iflt        VERBAS-11
 ; -----------------------------------------------------------------------------
 RESVEC          LDU         #LA00E          ; BASIC WARM START ENTRY (RESET)
 LA02A           CLRB                        ;
@@ -121,7 +121,7 @@ LA0BA           STX         TOPRAM          ; SET TOP OF RAM POINTER
                 else
 ; -----------------------------------------------------------------------------
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                iflt        VERBAS-20
 ; -----------------------------------------------------------------------------
 RESVEC          LEAY        <LA00E,PCR      ; POINT Y TO WARM START CHECK CODE
 LA02A           LDX         #PIA1           ; POINT X TO PIA1
@@ -158,7 +158,7 @@ LA056           STA         ,U++            ; ZERO OUT SAM CONTROL REGISTER BIT
 LA05E           TFR         B,DP            ; SET DIRECT PAGE TO ZERO
                 LDB         #$04            ; USE AS A MASK TO CHECK RAMSZ INPUT
 ; -----------------------------------------------------------------------------
-                if          VERBAS<13
+                iflt        VERBAS-13
 ; -----------------------------------------------------------------------------
                 STA         -2,X            ; SET RAMSZ STROBE HIGH
                 BITB        2,X             ; CHECK RAMSZ INPUT
@@ -292,7 +292,7 @@ LA0C0           STA         ,X+             ; FILL THE RAM VECTORS WITH RTS
                 JSR         >LAD19          ; G0 DO A NEW
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                iflt        VERBAS-20
 ; -----------------------------------------------------------------------------
                 LDX         #$4558          ; ASCII EX (FIRST TWO LETTERS OF EXTENDED)
 LA0CE           CMPX        EXBAS           ; SEE IF EXTENDED ROM IS THERE
@@ -330,7 +330,7 @@ BAWMST          NOP                         ;  NOP REQD FOR WARM START
 
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                iflt        VERBAS-20
 ; -----------------------------------------------------------------------------
                 JSR         >CLRSCRN        ; CLEAR SCREEN
 ; -----------------------------------------------------------------------------
@@ -352,7 +352,7 @@ BFRQSV          TST         PIA1+3          ; CARTRIDGE INTERRUPT?
 
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                iflt        VERBAS-20
 ; -----------------------------------------------------------------------------
 LA0FC           JSR         >LA7D1          ; KEEP DELAYING
 ; -----------------------------------------------------------------------------
@@ -370,7 +370,7 @@ LA0FC           JSR         >$8C28          ; ?
 
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                iflt        VERBAS-11
 ; -----------------------------------------------------------------------------
 LA102           LDU         #LA108
 ; -----------------------------------------------------------------------------
@@ -391,7 +391,7 @@ LA10D           FCB         18              ; MID BAND PARTITION OF 1200/2400 HE
                 FDB         128             ; NUMBER OF 55S TO CASSETTE LEADER
                 FCB         11              ; CURSOR BLINK DELAY
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                iflt        VERBAS-12
 ; -----------------------------------------------------------------------------
                 FDB         $57             ; LINE PRINTER BAUD RATE
 ; -----------------------------------------------------------------------------
@@ -434,22 +434,22 @@ LA145           FDB         LAA29           ; POINTS TO SECONDARY FUNCTION JUMP
 ; COPYRIGHT MESSAGES
 LA147           FCC         "COLOR BASIC "
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                iflt        VERBAS-11
 ; -----------------------------------------------------------------------------
                 FCC         "1.0"
 ; -----------------------------------------------------------------------------
                 else
-                if          VERBAS<12
+                iflt        VERBAS-12
 ; -----------------------------------------------------------------------------
                 FCC         "1.1"
 ; -----------------------------------------------------------------------------
                 else
-                if          VERBAS<13
+                iflt        VERBAS-13
 ; -----------------------------------------------------------------------------
                 FCC         "1.2"
 ; -----------------------------------------------------------------------------
                 else
-                if          VERBAS<20
+                iflt        VERBAS-20
 ; -----------------------------------------------------------------------------
                 FCC         "1.3"
 ; -----------------------------------------------------------------------------
@@ -466,7 +466,7 @@ LA147           FCC         "COLOR BASIC "
 LA156           FCB         CR
 LA157           FCC         "(C) 198"
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                iflt        VERBAS-12
 ; -----------------------------------------------------------------------------
                 FCB         '0'
 ; -----------------------------------------------------------------------------
@@ -526,7 +526,7 @@ LA1BF           PULS        B,X,PC
 ; THIS ROUTINE GETS A KEYSTROKE FROM THE KEYBOARD IF A KEY
 ; IS DOWN. IT RETURNS ZERO TRUE IF THERE WAS NO KEY DOWN.
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                iflt        VERBAS-11
 ; -----------------------------------------------------------------------------
 KEYIN1          EQU         *               ; needed symbol
 KEYIN           PSHS        B,X             ; SAVE REGISTERS
@@ -632,7 +632,7 @@ LA26A           LDB         B,X             ; GET ASCII CODE FROM CONTROL TABLE
                 else
 ; -----------------------------------------------------------------------------
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                iflt        VERBAS-12
 ; -----------------------------------------------------------------------------
 KEYIN1          EQU         *               ; needed symbol
 KEYIN           PSHS        B,X,U           ; SAVE REGISTERS
@@ -743,7 +743,7 @@ LA269           LDB         B,X             ; GET ASCII CODE FROM CONTROL TABLE
 
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                iflt        VERBAS-20
 ; -----------------------------------------------------------------------------
 KEYIN1          CLR         PIA0+2          ; CLEAR COLUMN STROBE
                 LDA         PIA0            ; READ KEY ROWS
@@ -919,7 +919,7 @@ LA2AA           STB         BLKTYP          ; BLOCK NUMBER
 LA2BF           PSHS        X,B,A,CC        ; SAVE REGISTERS AND INTERRUPT STATUS
                 ORCC        #$50            ; DISABLE IRQ,FIRQ
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                iflt        VERBAS-11
 ; -----------------------------------------------------------------------------
                 BSR         LA2FB           ; SET OUTPUT TO MARKING
                 ASLA                        ;  SEND 7 BITS AND ONE STOP BIT (BIT 7=0)
@@ -957,7 +957,7 @@ LA2F3           LDB         PIA1+2          ; WAIT FOR HANDSHAKE
                 else
 ; -----------------------------------------------------------------------------
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                iflt        VERBAS-12
 ; -----------------------------------------------------------------------------
                 BSR         LA2FB           ; SET OUTPUT TO MARKING
                 CLRB                        ;
@@ -1203,7 +1203,7 @@ LA42D           JSR         >RVEC8          ; HOOK INTO RAM
                 BNE         LA449           ; NO
                 LDA         CINCTR          ; GET CHARACTER BUFFER CTR
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                iflt        VERBAS-11
 ; -----------------------------------------------------------------------------
                 BEQ         LA449
 ; -----------------------------------------------------------------------------
@@ -1567,7 +1567,7 @@ LA6E5           BNE         LA6ED           ; GOT AN ERROR ON READING IN BLOCK
                 LDA         BLKTYP          ; GET BLOCK NUMBER
                 NEGA                        ;  CHECK FOR LAST BLOCK
 ; -----------------------------------------------------------------------------
-                if          VERBAS<11
+                iflt        VERBAS-11
 ; -----------------------------------------------------------------------------
                 BMI         LA6F3           ; RETURN IF NOT AN END OF PROGRAM BLOCK
 ; -----------------------------------------------------------------------------
@@ -3155,7 +3155,7 @@ LB22F           JSR         >LB3A2          ; SET CARRY IF NOT ALPHA
                 BEQ         LB27C           ; YES - GO PROCESS THE MINUS OPERATOR
                 CMPA        #$AB            ; PLUS TOKEN
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                iflt        VERBAS-12
 ; -----------------------------------------------------------------------------
                 BEQ         LB228           ; YES - GET ANOTHER CHARACTER
 ; -----------------------------------------------------------------------------
@@ -3412,7 +3412,7 @@ LB3E6           JSR         >LB141          ; GO EVALUATE NUMERIC EXPRESSION
 LB3E9           LDA         FP0SGN          ; GET FPA0 MANTISSA SIGN
                 BMI         LB44A           ; FC ERROR IF NEGATIVE NUMBER
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                iflt        VERBAS-12
 ; -----------------------------------------------------------------------------
 INTCNV          LDA         FP0EXP          ; GET FPA0 EXPONENT
                 CMPA        #$90            ; COMPARE TO 32768 - LARGEST INTEGER
@@ -4313,7 +4313,7 @@ LB9CD           TFR         A,B             ; PUT EXPONENT OF FPA1 INTO ACCB
                 SUBB        FP0EXP          ; SUBTRACT EXPONENT OF FPA0 FROM EXPONENT OF FPA1
                 BEQ         LBA3F           ; BRANCH IF EXPONENTS ARE EQUAL
 ; -----------------------------------------------------------------------------
-                if          VERBAS<12
+                iflt        VERBAS-12
 ; -----------------------------------------------------------------------------
                 BMI         LB9E2           ; BRANCH IF EXPONENT FPA0 > FPA1
 ; -----------------------------------------------------------------------------
@@ -5235,7 +5235,7 @@ LBFE6           FCB         $a1             ; '! ^ $80
 LBFF0           FDB         LA681           ; RESERVED
 
 ; -----------------------------------------------------------------------------
-                if          VERBAS<20
+                iflt        VERBAS-20
 ; -----------------------------------------------------------------------------
 LBFF2           FDB         SW3VEC          ; SWI3
 LBFF4           FDB         SW2VEC          ; SWI2
diff --git a/disk.asm b/disk.asm
index 7b13783..90cc2e9 100644
--- a/disk.asm
+++ b/disk.asm
@@ -7,7 +7,7 @@
 ; $Id: $
 
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 DHITOK          EQU         $E1             ; HIGHEST 1.1 DISK TOKEN
 CYEAR           EQU         '2
@@ -115,7 +115,7 @@ FCBLFT          EQU         24              ; NUMBER OF CHARACTERS LEFT IN BUFFE
 DCNVEC          FDB         DSKCON          ; DSKCON POINTER
 DSKVAR          FDB         DCOPC           ; ADDRESS OF DSKCON VARIABLES
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 DSINIT          FDB         DOSINI          ; DISK INITIALIZATION VECTOR
 DOSVEC          FDB         DOSCOM          ; DOS COMMAND VECTOR
@@ -152,7 +152,7 @@ LC03B           LDA         #$7E            ; OP CODE OF JMP INSTRUCTION
                 LDX         #DVEC22         ; GET ROM VALUE OF 'GET'/'PUT' RAM VECTOR
                 STX         RVEC22+1        ; SAVE IT IN RAM
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 LDX         #DVEC20         ; GET DISK COMMAND INTERPRETATION LOOP RAM VECTOR
                 STX         RVEC20+1        ; SAVE IN RAM VECTOR TABLE
@@ -200,7 +200,7 @@ LC061           STU         ,X++            ; SET USR VECTOR TO 'FC' ERROR
                 TFR         X,D             ; SAVE THE ADDRESS IN ACCD
                 TSTB                        ;  ON AN EVEN 256 BYTE BOUNDARY?
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 BEQ         LC0BD           ; YES
                 INCA                        ;  NO - ADD 256 TO ADDRESS
@@ -223,7 +223,7 @@ LC0C2           TFR         A,B             ; COPY ACCA TO ACCB
                 ADDA        #$06            ; ADD 1.5K (6 X 256 = ONE GRAPHICS PAGE)
                 STA         ENDGRP          ; SAVE NEW END OF GRAPHICS PAGE
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 JSR         [DSINIT]        ; INITIALIZE SWI2,3 JUMP ADDRESSES
 ; -----------------------------------------------------------------------------
@@ -253,7 +253,7 @@ LC0F0           CLR         NMIFLG          ; RESET NMI FLAG
 
 ; DISK BASIC COMMAND INTERP TABLES
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 LC109           FCB         20              ; 20 DISK BASIC 1.1 COMMANDS
 ; -----------------------------------------------------------------------------
@@ -280,7 +280,7 @@ LC113           FDB         DVEC0,DVEC1,DVEC2
 
 ; DISK BASIC COPYRIGHT MESSAGE
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 LC139           FCC         "DISK EXTENDED COLOR BASIC 1.1"
 ; -----------------------------------------------------------------------------
@@ -321,7 +321,7 @@ LC192           FCS         "DIR"           ; CE
                 FCS         "DSKO$"         ; E0
 
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 FCS         "DOS"           ; E1
 ; -----------------------------------------------------------------------------
@@ -351,7 +351,7 @@ LC1F1           FDB         DIR             ; DIR / CE
                 FDB         DSKO            ; DSKO$ / E0
 
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 FDB         DOS             ; DOS / E1
 ; -----------------------------------------------------------------------------
@@ -456,7 +456,7 @@ LC2C1           LEAS        $05,S           ; PURGE RETURN ADDRESS AND REGISTERS
                 BEQ         LC2EA           ; BRANCH IF END OF LINE
                 JSR         SYNCOMMA        ; SYNTAX CHECK FOR COMMA
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 JSR         >LB73D          ; EVALUATE EXPRESSION - RETURN IN (X)
                 TFR         X,D             ; SAVE RECORD NUMBER IN ACCD
@@ -617,7 +617,7 @@ LC3CF           PSHS        B               ; SAVE BYTE OFFSET ON STACK
 ; IF LAST USED SECTOR, CALCULATE HOW MANY BYTES ARE USED
 ; IF DATA IS BEING 'PUT' PASTH THE CURRENT END OF FILE
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 CMPD        #SECLEN         ; COMPARE TO ONE SECTOR'S LENGTH
                 BLS         LC405           ; BRANCH IF REMAINDER OF RECORD LENGTH WILL FIT IN THIS SECTOR
@@ -738,7 +738,7 @@ LC4C7           ASL         ,S              ; SET FILE TYPE TO OUTPUT
                 STX         V978            ; SAVE IT AS FIRST FREE DIRECTORY ENTRY
 
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 LC4E1           JSR         >LC567          ; SET UP NEW DIRECTORY ENTRY ON DISK
 ; -----------------------------------------------------------------------------
@@ -768,7 +768,7 @@ LC504           LDB         #2*29           ; 'OUT OF BUFFER SPACE' ERROR
 LC509           PSHS        B,A             ; SAVE END OF RANDOM BUFFER ON STACK
                 TST         V973            ; DID THIS FILE EXIST
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 BNE         LC514           ; BRANCH IF SO
                 BSR         LC567           ; SET UP NEW FILE IN DIRECTORY
@@ -1053,7 +1053,7 @@ LC71E           LDU         #DBUF0          ; POINT U TO DISK BUFFER 0 AND
                 JSR         >LA59A          ; MOVE ACCB BYTES FROM FAT RAM IMAGE TO DBUF0
 ; ZERO OUT ALL OF THE BYTES IN THE FAT SECTOR WHICH DO NOT CONTAIN THE GRANULE DATA
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 LC739           CLR         ,U+             ; CLEAR A BYTE
                 CMPU        #DBUF0+SECLEN   ; FINISHED THE WHOLE SECTOR?
@@ -1243,7 +1243,7 @@ DVEC6           LDA         #OUTFIL         ; OUTPUT FILE TYPE
 ; THIS IS THE SAME AS LEAS 2,S AND PSHS X
                 JSR         >LC744          ; POINT X TO FCB
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 PSHS        B,A             ; SAVE ACCB AND FILE TYPE ON STACK
                 LDA         FCBTYP,X        ; GET FILE TYPE
@@ -1269,7 +1269,7 @@ LC866           PULS        A,X,PC          ; RETURN
 ; -----------------------------------------------------------------------------
 
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 LC868           LDX         $04,S           ; GET CALLING ADDRESS FROM THE STACK AND
                 CMPX        #LB00C          ; RETURN UNLESS COMING FROM
@@ -1289,7 +1289,7 @@ LC881           LDX         #LB01E          ; GET MODIFIED REENTRY POINT INTO BA
 ; -----------------------------------------------------------------------------
 
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 NEAREST_RTS     set         LC8AF
 ; -----------------------------------------------------------------------------
@@ -1323,7 +1323,7 @@ DVEC11          TST         DEVNUM          ; CHECK DEVICE NUMBER AND RETURN
 LC8AF           RTS                         ; = DO A BREAK CHECK IF DISK FILE
 
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 ; COMMAND INTERPRETATION RAM HOOK
 DVEC20          LEAS        $02,S           ; PURGE RETURN ADDRESS OFF OF THE STACK
@@ -1383,7 +1383,7 @@ DVEC14          LEAS        $02,S           ; PURGE RETURN ADDRESS OFF OF THE ST
                 LDB         FCBTYP,X        ; GET FILE TYPE
                 CMPB        #RANFIL         ; RANDOM FILE?
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 LBEQ        LA616           ; 'FM' BAD FILE MODE ERROR IF RANDOM
 ; -----------------------------------------------------------------------------
@@ -1637,7 +1637,7 @@ LCB06           STX         FCBTMP          ; SAVE FILE BUFFER POINTER
                 LDA         #$80            ; SET THE PRE-SAVED BIT TO INDICATE THAT THE DATA
 ; HAS ALREADY BEEN SAVED ON DISK
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 ORA         FCBCPT,X        ; 'OR' IN THE FULL SECTOR FLAG
 ; -----------------------------------------------------------------------------
@@ -1652,7 +1652,7 @@ LCB06           STX         FCBTMP          ; SAVE FILE BUFFER POINTER
                 INC         FATCON,X        ; INCREMENT GRANULE DATA (ADD ONE SECTOR TO LAST
 ; GRANULE) SKIP PAST THE SIX FAT CONTROL BYTES
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 LCB2E           JMP         >LCBC3          ; UPDATE FAT AND DIRECTORY
 LCB31           CMPA        #RANFIL         ; RANDOM FILE?
@@ -1672,7 +1672,7 @@ LCB31           CMPA        #RANFIL         ; RANDOM FILE?
                 LEAY        D,X             ; POINT Y TO END OF RANDOM FILE BUFFER
                 PSHS        Y,X,B,A         ; SAVE POINTERS ON STACK
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 LEAY        ,S              ; POINT Y CURRENT STACK POINTER
 ; -----------------------------------------------------------------------------
@@ -1690,7 +1690,7 @@ LCB4E           LEAU        $05,U           ; MOVE POINTER TO NEXT VARIABLE
 LCB52           PULS        U               ; GET ADDRESS OF NEXT ARRAY TO U
 LCB54           CMPU        ARYEND          ; COMPARE TO END OF ARRAYS
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 BEQ         LCB93           ; BRANCH IF END OF ARRAYS
 ; -----------------------------------------------------------------------------
@@ -1725,7 +1725,7 @@ LCB76           LDX         $02,U           ; POINT X TO START OF STRING
                 CMPX        RNBFAD          ; COMPARE TO START OF FREE RANDOM FILE BUFFER AREA
                 BHS         LCB8B           ; RETURN IF > START OF FREE RANDOM FILE BUFFER AREA
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 CMPX        $02,Y           ; COMPARE TO START OF THIS FILE'S RANDOM BUFFER
                 BLO         LCB8B           ; RETURN IF < START OF THIS FILE'S RANDOM BUFFER
@@ -1753,7 +1753,7 @@ LCB8C           CLR         ,U              ; CLEAR THE LENGTH OF THE STRING
                 CLR         $03,U           ; OF THE STRING
                 RTS
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 ; REMOVE RESERVED SPACE IN RANDOM FILE BUFFER FOR A 'CLOSED' RANDOM FILE
 ; ADJUST THE START OF RANDOM FILE BUFFER POINTER IN ALL RANDOM FCBS
@@ -1879,7 +1879,7 @@ LCC6A           PULS        A,B,X,PC
 LCC6C           PSHS        U,Y             ; SAVE REGISTERS
                 STA         SECLEN+FCBCON-1,X ; STORE LAST CHARACTER IN BUFFER
 ; -----------------------------------------------------------------------------
-                if          VERDISK<11
+                IFLT        VERDISK-11
 ; -----------------------------------------------------------------------------
                 JSR         LC685           ; INCREMENT RECORD NUMBER
 ; -----------------------------------------------------------------------------
@@ -1899,7 +1899,7 @@ LCC6C           PSHS        U,Y             ; SAVE REGISTERS
                 BLO         LCC99           ; BRANCH IF NOT AT END OF GRANULE
 
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 DEC         FCBSEC,Y        ; DECREMENT SECTOR NUMBER AND INCREMENT ERROR FLAG IN
                 INC         FCBCPT,Y        ; CASE ERROR FOUND WHILE LOOKING FOR NEXT GRANULE
@@ -2111,7 +2111,7 @@ MKN             JSR         >LB143          ; 'TM' ERROR IF VALTYP=STRING
                 JMP         >LB69B          ; SAVE STRING DESCRIPTOR ON STRING STACK
 ; LOC COMMAND
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 LOC             BSR         LCE19           ; POINT X TO FILE BUFFER
                 LDD         FCBREC,X        ; GET RECORD NUMBER (RANDOM FILE) OR SECTOR CTR (SEQUENTIAL)
@@ -2544,7 +2544,7 @@ FILES           JSR         >L95AC          ; RESET SAM DISPLAY PAGE AND VDG MOD
 LD181           JSR         SYNCOMMA        ; SYNTAX CHECK FOR COMMA
                 JSR         >LB3E6          ; EVALUATE EXPRESSION, RETURN VALUE IN ACCD
 ; -----------------------------------------------------------------------------
-                if          VERDISK<11
+                IFLT        VERDISK-11
 ; -----------------------------------------------------------------------------
                 ADDD        #$0001          ; ADD ONE BYTE
 ; -----------------------------------------------------------------------------
@@ -2568,7 +2568,7 @@ LD199           ADDD        #FCBLEN         ; FCBLEN REQUIRED FOR EACH BUFFER
 ; (COPY, BACKUP, MERGE ETC.) MAY ACCESS THIS BUFFER.
                 TSTB                        ;  AT AN EXACT 256 BYTE BOUNDARY?
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 BEQ         LD1A8           ; YES
                 INCA                        ;  NO - ADD 256
@@ -2609,7 +2609,7 @@ LD1AF           STA         ,S              ; SAVE MS BYTE OF NEW GRAPHIC RAM ST
                 STB         FCBACT          ; NUMBER OF FILE BUFFERS
                 STU         FCBADR          ; START OF FILE BUFFERS
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 LDA         CURLIN          ; GET CURRENT LINE NUMBER
                 INCA                        ;  ARE WE IN DIRECT MODE?
@@ -2843,7 +2843,7 @@ LD3CE           BSR         LD399           ; SAVE DESTINATION FILENAME.EXT & DR
 ; COUNT THE NUMBER OF SECTORS WORTH OF FREE RAM AVAILABLE
                 CLR         ,-S             ; CLEAR A SECTOR COUNTER ON THE STACK
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 LEAX        -SECLEN,S       ; POINT X ONE SECTOR LENGTH DOWN FROM THE TOP OF STACK
 ; -----------------------------------------------------------------------------
@@ -3117,7 +3117,7 @@ LD5CE           INCA                        ;  INCREMENT PHYSICAL SECTOR NUMBER
                 LDA         #$00            ; YOU COULD DELETE THIS INSTRUCTION AND CHANGE FOLLOWING STA TO CLR
                 STA         DCOPC           ; RESTORE HEAD TO TRACK ZERO DSKCON OP CODE
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 CLR         DCTRK           ; SET DSKCON TRACK VARIABLE TO TRACK ZERO
 ; -----------------------------------------------------------------------------
@@ -3129,7 +3129,7 @@ LD5CE           INCA                        ;  INCREMENT PHYSICAL SECTOR NUMBER
                 STA         FDCREG          ;
                 JSR         >LD7D1          ; CHECK DRIVE READY - WAIT UNTIL READY
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
                 BEQ         LD620           ; BRANCH IF DRIVES READY
                 JMP         >LD688          ; ERROR IF DRIVES NOT READY
@@ -3263,7 +3263,7 @@ LD6D4           FCB         8,0             ; SYNC FIELD
                 FCB         1,$F7           ; CRC REQUEST
                 FCB         24,$4E          ; GAP III (POST DATA GAP)
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 ; DOS COMMAND
 DOS             BNE         LD742           ; RETURN IF ARGUMENT GIVEN
@@ -3513,7 +3513,7 @@ DIRQSV          LDA         PIA0+3          ; 63.5 MICRO SECOND OR 60 HZ INTERRU
 LD8CD           JMP         >L8955          ; JUMP TO EXTENDED BASIC'S IRQ HANDLER
 
 ; -----------------------------------------------------------------------------
-                if          VERDISK>10
+                ifgt        VERDISK-10
 ; -----------------------------------------------------------------------------
 
 ; THIS IS THE END OF DISK BASIC (EXCEPT FOR THE DOS COMMAND AT $DF00).
diff --git a/extbas.asm b/extbas.asm
index e06ad21..2538a75 100644
--- a/extbas.asm
+++ b/extbas.asm
@@ -88,7 +88,7 @@ L80B8           LDX         #XBWMST         ; GET EXBAS WARM START (RESET) VECTO
                 JMP         >LA0E2          ; SET WARM START FLAG, ENTER BASIC
 ; EXBAS WARM START ENTRY POINT
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<20
+                iflt        VEREXTBAS-20
 ; -----------------------------------------------------------------------------
 XBWMST          NOP                         ;  WARM START ENABLE
 ; -----------------------------------------------------------------------------
@@ -109,7 +109,7 @@ XBWMST          FCB         $ff
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                iflt        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
 ; THIS CODE IS NOT USED BY ANY OF THE BASICS
 L80D0           LDA         PIA1+2          ; READ PIA PORT B
@@ -147,12 +147,12 @@ L80E8           FCC         "EXTENDED COLOR BASIC "
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                iflt        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
                 FCC         "1.0"           ; MINOR VERSION NUMBER
 ; -----------------------------------------------------------------------------
                 else
-                if          VEREXTBAS<20
+                iflt        VEREXTBAS-20
 ; -----------------------------------------------------------------------------
                 FCC         "1.1"           ; MINOR VERSION NUMBER
 ; -----------------------------------------------------------------------------
@@ -169,12 +169,12 @@ L80E8           FCC         "EXTENDED COLOR BASIC "
 L8100           FCB         CR
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                iflt        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
 L8101           FCC         "COPYRIGHT (C) 1981 BY TANDY" ; COPYRIGHT YEAR
 ; -----------------------------------------------------------------------------
                 else
-                if          VEREXTBAS<20
+                iflt        VEREXTBAS-20
 ; -----------------------------------------------------------------------------
 L8101           FCC         "COPYRIGHT (C) 1982 BY TANDY" ; COPYRIGHT YEAR
 ; -----------------------------------------------------------------------------
@@ -1509,13 +1509,13 @@ DLOAD           JSR         >LA429          ; CLOSE FILES
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<20
+                iflt        VEREXTBAS-20
 ; -----------------------------------------------------------------------------
 
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                iflt        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
 ; the DLOAD bug. the code in version 1.0 did not allow for the fact
 ; that the current basic input character was not in ACCA following the
@@ -1563,7 +1563,7 @@ L8C44           JSR         >L8CD0          ; TRANSMIT FILE NAME AND READ IN FIL
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                iflt        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
                 BNE         L8C85           ; DLOADM
 ; -----------------------------------------------------------------------------
@@ -2324,7 +2324,7 @@ L9177           INCA                        ;  ADD ONE TO TENS DIGIT COUNTER
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                iflt        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
                 SUBB        #12             ; SUBTRACT 12 FROM EXPONENT AND ADD ONE TO TENS
                 BCC         L9177           ; DIGIT IF NO CARRY. TENS DIGIT DONE IF THERE IS A CARRY
@@ -3050,7 +3050,7 @@ PMODETOK        CMPA        #','            ; CHECK FOR COMMA - FIRST ARGUMENT M
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                iflt        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
 ; supposed to be start of graphic ram. patched later to not be hardcoded value
 ;
@@ -3135,7 +3135,7 @@ PCLEAR          JSR         EVALEXPB        ; EVALUATE EXPRESSION, RETURN VALUE
 
 
 ; -----------------------------------------------------------------------------
-                if          VEREXTBAS<11
+                iflt        VEREXTBAS-11
 ; -----------------------------------------------------------------------------
 ; THIS CODE REFLECTS THE INFAMOUS PCLEAR BUG
                 LBLO        LB44A           ; IF TRYING TO CLEAR LESS THAN END OF CURRENT PAGE = 'ILLEGAL FUNCTION CALL'
diff --git a/supbas.asm b/supbas.asm
index ec6e909..a1d5582 100644
--- a/supbas.asm
+++ b/supbas.asm
@@ -339,7 +339,7 @@ WAITLOOP        BRA         WAITLOOP        ; ENDLESS WAIT LOOP
 
 ; IMAGES OF THE VIDEO CONTROL REGISTERS (FF98-FF9F)
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
 VIDIMAGE        FCB         $00,$00,$00,$00,$0F,$E0,$00,$00
 ; -----------------------------------------------------------------------------
@@ -354,7 +354,7 @@ VIDIMAGE        FCB         $08,$00,$00,$00,$0F,$E0,$00,$00
 
 ; IMAGES OF THE PALETTE REGISTERS (FFB0-FFBF)
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
 PALIMAGE        FCB         $12,$24,$0B,$07,$3F,$1F,$09,$26 ; pal regs #0-7
 ; -----------------------------------------------------------------------------
@@ -552,7 +552,7 @@ ENDMOVE         EQU         *               ; THE END OF THE DATA THAT'S COPIED
 
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
 ; UNUSED GARBAGE BYTES?
                 FCB         $FF,$FF,$FF,$FF
@@ -974,7 +974,7 @@ AUTHPIC         FCB         $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,
 ENDPIC          EQU         *               ; THE END OF THE AUTHOR'S PICTURE DATA
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
 ; UNUSED GARBAGE BYTES?
                 FCB         $FF,$00,$00,$A0,$27,$00,$00,$00,$00,$00,$00
@@ -1150,7 +1150,7 @@ SETTEXT         PSHS        Y,X,A
 IM.TEXT         FCB         COCO+MMUEN+MC3+MC2 ; FF90
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $00
 ; -----------------------------------------------------------------------------
@@ -1167,7 +1167,7 @@ IM.TEXT         FCB         COCO+MMUEN+MC3+MC2 ; FF90
 SE03B           FCB         MMUEN+MC3+MC2   ; FF90
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $03
 ; -----------------------------------------------------------------------------
@@ -1184,7 +1184,7 @@ SE03B           FCB         MMUEN+MC3+MC2   ; FF90
 SE044           FCB         MMUEN+MC3+MC2   ; FF90
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $03
 ; -----------------------------------------------------------------------------
@@ -1219,7 +1219,7 @@ RESTABLE        FCB         $15             ; 320 PIXELS, 4 COLORS
 IM.GRAPH        FCB         MMUEN+MC3+MC2   ; FF90
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $80
 ; -----------------------------------------------------------------------------
@@ -1236,7 +1236,7 @@ IM.GRAPH        FCB         MMUEN+MC3+MC2   ; FF90
 SE079           FCB         MMUEN+MC3+MC2   ; FF90
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $80
 ; -----------------------------------------------------------------------------
@@ -1818,7 +1818,7 @@ SE600           CMPA        #$F6            ; 'CMP' TOKEN?
 ; CMP ENTRY POINT - SET THE PALETTE REGISTERS FOR DEFAULT CMP VALUES
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
 SE606           LEAX        >IM.CMP,PCR     ; POINT TO THE DEFAULT CMP PALETTE COLORS
 ; -----------------------------------------------------------------------------
@@ -1876,7 +1876,7 @@ CMP             BRA         SE606
 
 ; MASTER IMAGES USED TO PROGRAM THE CUSTOM CHIP'S PALETTE REGISTERS
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
 IM.PALET        FCB         18,36,11,7,63,31,9,38
                 FCB         0,18,0,63,0,18,0,38
@@ -4170,7 +4170,7 @@ SFA06           PULS        B               ; GET THE NEW ATTRIBUTE BYTE FROM TH
                 RTS
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
 ; UNUSED GARBAGE BYTES?
                 FCB         $00,$00,$00,$00
@@ -4280,7 +4280,7 @@ INT.SWI         EQU         $FEFA
 INT.NMI         EQU         $FEFD
 
 ; -----------------------------------------------------------------------------
-                if          COCOPAL<1
+                iflt        COCOPAL-1
 ; -----------------------------------------------------------------------------
                 FCB         $00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF
                 FCB         $FF,$FF,$FF,$FF,$FF,$FF,$FF,$FF,$00,$00,$00,$00,$00,$00,$00,$00
-- 
